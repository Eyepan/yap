name: Build and Release

on:
    push:
        branches:
            - master
            - dev

jobs:
    build:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Check out the code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.23

            - name: Build for ${{ matrix.os }}
              run: go build -o yap-${{ matrix.os }} main.go

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: yap-${{ matrix.os }}
                  path: yap-${{ matrix.os }}

    release:
        # Only run this job on ubuntu-latest to avoid tag conflicts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Check out the code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.19

            - name: Fetch tags
              run: git fetch --tags

            - name: Bump Version and Tag
              id: version
              run: |
                  git fetch --tags
                  version=$(git describe --tags $(git rev-list --tags --max-count=1))
                  IFS='.' read -r major minor patch <<< "${version#v}"
                  if [[ ${{ github.ref }} == "refs/heads/master" ]]; then
                    new_version="v$major.$minor.$((patch + 1))"
                  elif [[ ${{ github.ref }} == "refs/heads/dev" ]]; then
                    new_version="v$major.$minor.$((patch + 1))-pre"
                  fi
                  echo "New version: $new_version"
                  git tag $new_version
                  git push origin $new_version
              shell: bash

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      yap-ubuntu-latest
                  draft: false
                  prerelease: ${{ github.ref == 'refs/heads/dev' }}
